name: AI Code Review and Build Check

on:
  pull_request:
    branches:
      - dev  # dev 브랜치에 대한 PR에서만 실행

jobs:
  code-review-and-build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Node.js 및 Yarn 설정
      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      # 4. 변경된 코드 추출
      - name: Get Diff of PR
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD > pr_diff.txt
          echo "변경된 코드:"
          cat pr_diff.txt

      # 5. OpenAI API 호출 (한국어 응답 요청)
      - name: Call OpenAI API for Code Review
        id: review
        run: |
          echo "OpenAI API를 호출하여 코드 리뷰를 진행합니다..."
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {"role": "system", "content": "당신은 한국어로 응답하는 전문 코드 리뷰어입니다. 다음 코드 변경 사항을 리뷰하고, 개선 사항이나 주의할 점을 한국어로 작성하세요. 또한 빌드가 실패했을 경우 해당 문제점을 간략히 설명해주세요."},
                {"role": "user", "content": "'"$(cat pr_diff.txt)"'"}
              ],
              "temperature": 0.3
            }' | jq -r '.choices[0].message.content')

          echo "REVIEW_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$RESPONSE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 6. GitHub PR에 코드 리뷰 피드백 추가
      - name: Add AI Review Comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "🧑‍💻 AI 코드 리뷰 및 빌드 검증 결과"
          message: |
            **🔍 코드 리뷰 결과:**
            ${{ env.REVIEW_OUTPUT }}
            ---
            **🔨 빌드 상태:** ${{ env.BUILD_STATUS == 'SUCCESS' && '✅ 성공' || '❌ 실패' }}
