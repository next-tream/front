name: AI Code Review

on:
  pull_request:
    branches:
      - dev       
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    if: contains(github.event.pull_request.title, 'Review')
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      
      - name: Get Diff of PR
        id: diff
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/dev:refs/remotes/origin/dev
          git diff origin/dev...HEAD > pr_diff.txt

      
      - name: Call OpenAI API for Code Review
        id: review
        run: |
          echo "### Calling OpenAI API for Code Review..."

          # JSON-safeÎ°ú Î≥ÄÌôò
          DIFF_CONTENT=$(jq -Rs . < pr_diff.txt)
          PROMPT=$(jq -Rs . < review_prompt.txt)

          RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {"role": "system", "content": '"$PROMPT"'},
                {"role": "user", "content": '"$DIFF_CONTENT"'}
              ],
              "temperature": 0.3
            }')

          HTTP_STATUS=$(echo "$RESPONSE" | grep "HTTP_STATUS" | cut -d ":" -f2)
          API_BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS/d')

          # HTTP ÏÉÅÌÉú ÏΩîÎìú ÌôïÏù∏
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "‚ùå OpenAI API Ìò∏Ï∂ú Ïã§Ìå® (HTTP $HTTP_STATUS)"
            exit 1
          fi

          # ÏùëÎãµÏóêÏÑú ÌîºÎìúÎ∞± Ï∂îÏ∂ú
          REVIEW_CONTENT=$(echo "$API_BODY" | jq -r '.choices[0].message.content // "No feedback returned."')

          echo "REVIEW_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$REVIEW_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      
      - name: Add Review Comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: AI Code Review
          message: |
            üë®‚Äçüíª **AI Code Review Feedback**:
            ---
            ${{ env.REVIEW_OUTPUT }}
